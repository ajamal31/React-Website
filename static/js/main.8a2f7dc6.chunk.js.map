{"version":3,"sources":["App.js","weatherLogo.png","reportWebVitals.js","index.js"],"names":["api","App","useState","parameters","setParameters","weather","setWeather","keyword","useEffect","a","fetch","response","json","results","className","type","placeholder","onChange","e","input","target","value","src","icon","alt","description","Math","round","main","temp","name","sys","country","Date","dt","toLocaleTimeString","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAIMA,GCJS,I,MDKT,oCADAA,EAEI,kDAoEKC,MAjEf,WAAgB,IAAD,EACsBC,mBAAS,eAD/B,mBACPC,EADO,KACKC,EADL,OAEgBF,mBAAS,IAFzB,mBAEPG,EAFO,KAEEC,EAFF,OAGgBJ,mBAAS,cAHzB,mBAGPK,EAHO,KAcd,OAdc,KAMdC,oBAAS,sBAAC,8BAAAC,EAAA,sEACcC,MAAM,GAAD,OACxBV,EADwB,cACPG,EADO,+BAC0BH,IAF7C,cACHW,EADG,gBAIaA,EAASC,OAJtB,OAIHC,EAJG,OAKTP,EAAWO,GALF,2CAMP,CAACV,IAGH,sBAAKW,UAAU,MAAf,UACC,wBAAQA,UAAU,aAAlB,SACC,6BACC,uBACCA,UAAU,YACVC,KAAK,OACLC,YAAaT,EACbU,SAAU,SAACC,GACV,IAAIC,EAAQD,EAAEE,OAAOC,MACbjB,EAARe,GApBmB,sBA0BvB,sBAAKL,UAAU,WAAf,UAEET,EAAQA,QACR,sBAAKS,UAAU,WAAf,UACC,qBACCQ,IAAG,4CAAuCjB,EAAQA,QAAQ,GAAGkB,KAA1D,WACHC,IAAI,KAEL,mBAAGV,UAAU,mBAAb,SAAiCT,EAAQA,QAAQ,GAAGoB,cACpD,8BAAIC,KAAKC,MAAMtB,EAAQuB,KAAKC,MAA5B,aAGD,wBAEAxB,EAAQuB,KACR,gCACC,8BACEvB,EAAQyB,KADV,KACkBzB,EAAQ0B,IAAIC,WAE9B,4BAAI,IAAIC,KAAkB,IAAb5B,EAAQ6B,IAAWC,0BAGjC,0DAED,yBAAQrB,UAAU,aAAlB,UACC,mDACA,mBAAGsB,KAAK,kDAAR,mCErDUC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8a2f7dc6.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport weatherLogo from \"./weatherLogo.png\";\nimport \"./App.css\";\n\nconst api = {\n\tkey: \"cecfe61da45b46b0ff77615eed1fd730\",\n\tbaseUrl: \"https://api.openweathermap.org/data/2.5/weather\",\n};\n\nfunction App() {\n\tconst [parameters, setParameters] = useState(\"Edmonton,CA\");\n\tconst [weather, setWeather] = useState({});\n\tconst [keyword, setKeyword] = useState(\"Search ...\");\n\tconst defaultParameter = \"Edmonton,CA\";\n\n\tuseEffect(async () => {\n\t\tconst response = await fetch(\n\t\t\t`${api.baseUrl}?q=${parameters}&units=metric&appid=${api.key}`\n\t\t);\n\t\tconst results = await response.json();\n\t\tsetWeather(results);\n\t}, [parameters]);\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<header className=\"App-header\">\n\t\t\t\t<h3>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"App-input\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder={keyword}\n\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\tvar input = e.target.value;\n\t\t\t\t\t\t\tinput ? setParameters(input) : setParameters(defaultParameter);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</h3>\n\t\t\t</header>\n\n\t\t\t<div className=\"App-body\">\n\t\t\t\t{/* Temperature and weather icon is viewed here */}\n\t\t\t\t{weather.weather ? (\n\t\t\t\t\t<div className=\"App-info\">\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tsrc={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`}\n\t\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<p className=\"Temp-description\">{weather.weather[0].description}</p>\n\t\t\t\t\t\t<p>{Math.round(weather.main.temp)}Â°</p>\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t<div></div>\n\t\t\t\t)}\n\t\t\t\t{weather.main ? (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t{weather.name}, {weather.sys.country}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p>{new Date(weather.dt * 1000).toLocaleTimeString()}</p>\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t<div>Enter a valid location!</div>\n\t\t\t\t)}\n\t\t\t\t<footer className=\"App-footer\">\n\t\t\t\t\t<p>Arun's Weather App</p>\n\t\t\t\t\t<a href=\"https://github.com/ajamal31/Weather-App-ReactJS\">\n\t\t\t\t\t\tSource Code\n\t\t\t\t\t</a>\n\t\t\t\t</footer>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","export default __webpack_public_path__ + \"static/media/weatherLogo.bbb8057a.png\";","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}